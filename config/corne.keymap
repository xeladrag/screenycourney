/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        BootLeft {
            bindings = <&bootloader>;
            key-positions = <24 12 0>;
        };

        BootRight {
            bindings = <&bootloader>;
            key-positions = <23 35 11>;
        };

        Escapade {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        LeftPower {
            bindings = <&ext_power EP_TOG>;
            key-positions = <1 0 2 3 4 5>;
        };

        RightPower {
            bindings = <&none>;
            key-positions = <6 7 8 9 10 11>;
        };

        snippp {
            bindings = <&kp LS(LG(S))>;
            key-positions = <12 14 13>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E                  &kp R  &kp T        &kp Y          &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D                  &kp F  &kp G        &kp H          &kp J  &kp K      &kp L    &kp SEMI  &mt RIGHT_SHIFT ENTER
&kp LCTRL       &kp Z  &kp X  &kp C                  &kp V  &kp B        &kp N          &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                              &mt LEFT_ALT LEFT_WIN  &mo 1  &kp SPACE    &kp BACKSPACE  &mo 2  &kp RALT
            >;
        };

        Numbers {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Numbers";
            bindings = <
&kp TAB         &kp N1        &kp N2        &kp N3        &kp N4        &kp N5                  &kp N6             &kp N7           &kp N8     &kp N9  &kp N0         &kp BSPC
&kp LEFT_SHIFT  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &kp LEFT_PARENTHESIS    &kp RIGHT_BRACKET  &kp MINUS        &kp EQUAL  &trans  &kp SEMICOLON  &mt RIGHT_SHIFT SQT
&kp LEFT_SHIFT  &bt BT_NXT    &trans        &trans        &trans        &kp LEFT_BRACKET        &kp RIGHT_BRACKET  &trans           &trans     &trans  &trans         &trans
                                            &kp LGUI      &trans        &kp SPACE               &kp BACKSPACE      &kp RIGHT_SHIFT  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Symbols";
            bindings = <
&kp GRAVE       &trans  &trans    &kp UP_ARROW    &trans     &kp LS(LPAR)            &kp LS(RPAR)           &trans     &trans     &kp LPAR  &kp RPAR  &kp BSPC
&kp LEFT_SHIFT  &trans  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp MINUS  &kp EQUAL  &trans    &trans    &kp NON_US_BACKSLASH
&kp LCTRL       &trans  &trans    &trans          &trans     &kp LEFT_BRACKET        &kp RIGHT_BRACKET      &trans     &trans     &trans    &trans    &kp TILDE
                                  &kp LGUI        &trans     &kp SPACE               &kp RET                &trans     &kp RALT
            >;
        };

        FN+BT {
            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6               &kp F7             &kp F8     &kp F9  &kp F10  &kp F11  &kp F12
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4         &trans             &trans     &trans  &trans   &trans   &trans
&bt BT_PRV  &bt BT_NXT    &trans        &trans        &soft_off     &ext_power EP_TOG    &ext_power EP_TOG  &soft_off  &trans  &trans   &trans   &kp Z
                                        &trans        &trans        &trans               &trans             &trans     &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        FN+BT {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
